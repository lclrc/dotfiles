#------------------------------------------------------------------------------
# File:   $HOME/.tmux.conf
# Author: Petr Zemek <s3rvac@gmail.com>
#------------------------------------------------------------------------------

# Rebind the prefix from C-b to C-s.
unbind C-b
set -g prefix C-s
# bind C-s send-prefix
bind C-s send-prefix

#------------------------------------------------------------------------------
# Settings.
#------------------------------------------------------------------------------

# Support 256 colors in the terminal emulator.
set -g default-terminal "screen-256color"

# Disable the delay between an escape key press and subsequent characters.
# This increases Vim responsiveness.
set -sg escape-time 0

# Set the base index for windows to 1 instead of 0.
set -g base-index 1

# Set the base index for panes to 1 instead of 0.
setw -g pane-base-index 1

# Scrollback limit.
set -g history-limit 20000

# Enable terminal-emulator scrolling.
set -ga terminal-overrides ",xterm*:smcup@:rmcup@"

# Pass xterm-style keys to make key combinations work as expected.
setw -g xterm-keys on

# Disable mouse in tmux. This makes tmux pass control directly to the used
# terminal emulator, so I can copy&paste as if I am not using tmux.
# tmux < v2.1:
# if-shell "[[ `tmux -V | cut -d' ' -f2` -lt 2.1 ]]" "setw -g mode-mouse on"
# tmux >= v2.1:
# if-shell "[[ `tmux -V | cut -d' ' -f2` -ge 2.1 ]]" "setw -g mouse on"

# tmux < 2.1
# setw -g mouse-resize-pane on
# setw -g mouse-select-pane on
# setw -g mouse-select-window on
# setw -g mode-mouse on

# TODO 鼠标支持 > 2.1 
# set -g mouse-utf8 on
set -g mouse on

bind-key -n WheelUpPane \
if-shell -Ft= "#{?pane_in_mode,1,#{mouse_button_flag}}" \
"send-keys -Mt=; send-keys -Mt=; send-keys -Mt=" \
"if-shell -Ft= '#{alternate_on}' \
'send-keys -t= Up Up Up' \
'copy-mode -et='"

bind-key -n WheelDownPane \
if-shell -Ft= "#{?pane_in_mode,1,#{mouse_button_flag,1,#{?alternate_on,0,1}}}" \
"send-keys -Mt=; send-keys -Mt=; send-keys -Mt=" \
"send-keys -t= Down Down Down"

# Monitor window activity. Windows with activity are then highlighted in the
# status line.
setw -g monitor-activity on

# Prevent tmux from displaying "Activity in window X" messages.
set -g visual-activity off

# Enable vi keys.
set -g status-keys vi
setw -g mode-keys vi

# Enable utf-8. Only available in tmux < v2.2.
setw -gq utf8 on
set -gq status-utf8 on

# Enable setting of terminal-emulator titles.
set -g set-titles on
set -g set-titles-string "#h"

# Automatically re-number windows after one of them is closed.
set -g renumber-windows on

set -g focus-events on

#------------------------------------------------------------------------------
# Key Bindings.
#------------------------------------------------------------------------------

# Smart pane switching with awareness of Vim splits. Now, I can use Ctrl+hjkl
# in both Vim and Tmux (without using the prefix). Based on
# http://www.codeography.com/2013/06/19/navigating-vim-and-tmux-splits.
# Note: I do not use https://github.com/christoomey/vim-tmux-navigator because
#       it does not work when vim is run over ssh.
# Note: The "... || true" part is there to prevent annoying messages when there
#       is no pane to switch into.
# bind -n C-h run "(tmux display-message -p '#{pane_title}' | grep -iq vi && tmux send-keys C-h) || (tmux select-pane -L || true)"
# bind -n C-j run "(tmux display-message -p '#{pane_title}' | grep -iq vi && tmux send-keys C-j) || (tmux select-pane -D || true)"
# bind -n C-k run "(tmux display-message -p '#{pane_title}' | grep -iq vi && tmux send-keys C-k) || (tmux select-pane -U || true)"
# bind -n C-l run "(tmux display-message -p '#{pane_title}' | grep -iq vi && tmux send-keys C-l) || (tmux select-pane -R || true)"

# bind C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vi && tmux send-keys C-h) || tmux select-pane -L"
# bind C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vi && tmux send-keys C-j) || tmux select-pane -D"
# bind C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vi && tmux send-keys C-k) || tmux select-pane -U"
# bind C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vi && tmux send-keys C-l) || tmux select-pane -R"

# Occasionally, it may happen that the above smart-pane-switching keys do not
# work. In such a case, the following bindings allow me to force pane switching
# by using Ctrl+hjkl with prefix.
bind -r C-h select-pane -L
bind -r C-j select-pane -D
bind -r C-k select-pane -U
bind -r C-l select-pane -R

# Pane resizing.
bind -r M-h resize-pane -L 5
bind -r M-j resize-pane -D 5
bind -r M-k resize-pane -U 5
bind -r M-l resize-pane -R 5

# Pane splitting.
# bind | split-window -h -c "#{pane_current_path}"
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

bind-key c new-window -c "#{pane_current_path}"

# Movement of windows.
bind -r < swap-window -t -1
bind -r > swap-window -t +1

# Make the prefix and 0 go to window number 10 (I use window numbering starting
# from 1).
bind 0 select-window -t :10

# Do not display the original window's name when renaming it. This makes
# renaming faster since one does not need to first erase the original name.
bind , command-prompt -p "(rename-window '#W')" "rename-window '%%'"

# Do the same for sessions.
bind '$' command-prompt -p "(rename-session '#S')" "rename-session '%%'"

# Make f search only in window names (-N), not in titles (-T) or contents (-C).
# The default is -CNT.
bind f command-prompt -p "(find-window)" "find-window -N '%%'"

# Clear activity flags from all windows in the current session.
# Based on http://stackoverflow.com/a/12670429/2580955.
# Note: The 'tmux-select-each' script has to be available in $PATH.
bind Space run-shell "tmux-select-each '#S'"

# Configuration file reload.
bind R source-file ~/.tmux.conf \; display "Configuration reloaded."

# Toggle pane synchronization.
bind S set synchronize-panes

# Make ESC start copy mode.
bind Escape copy-mode

# Make Ctrl+b start copy mode and scroll one page up (just like PgUp does).
# bind C-b copy-mode -u

# Make copy mode behave more like Vim.
# Moreover, make 'y' copy also to the system clipboard.
bind -t vi-copy v begin-selection
bind -t vi-copy C-v rectangle-toggle
bind -t vi-copy y copy-pipe "xclip -filter -selection clipboard | xclip -selection primary"
unbind p
bind p pasteb

#------------------------------------------------------------------------------
# Styling.
#------------------------------------------------------------------------------

# Status line.
set -g status-fg white
set -g status-bg black
set -g status-left ""
# 设置自动刷新的时间间隔
set -g status-interval 1
# set -g status-right "#{?pane_synchronized, #[bg=blue]SYNCHRONIZED#[default],} #S "
# set -g status-right '#[fg=white,bg=#444444] [#h] #[fg=white,bg=#666666] %Y-%m-%d #[fg=white,bg=#888888] #{?pane_synchronized, #[bg=blue]SYNCHRONIZED#[default],} %H:%M:%S '
set -g status-right '#{?pane_synchronized, #[bg=blue]SYNCHRONIZED#[default],} #{prefix_highlight} #[fg=white] %H:%M:%S '

# Window list.
setw -g window-status-fg colour246 # grey
setw -g window-status-bg black
setw -g window-status-attr none
setw -g window-status-format "#[fg=colour172]#I#[fg=white] #W "

# Active window.
setw -g window-status-current-fg white
setw -g window-status-current-bg black
setw -g window-status-current-attr bright
setw -g window-status-current-format "#[fg=colour172]#I#[fg=white] #W#F"

# Window activity.
setw -g window-status-activity-fg colour246 # grey
# setw -g window-status-activity-bg black
setw -g window-status-activity-bg colour246

# Panes.
set -g pane-border-fg white
set -g pane-border-bg black
set -g pane-active-border-fg green
set -g pane-active-border-bg black

# Command/message line.
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# Status update interval.
# set -g status-interval 60

# Make the window list appear at the left-hand side instead of at the center.
set -g status-justify left
# set -g status-justify centre

#------------------------------------------------------------------------------
# Plugins.
#------------------------------------------------------------------------------

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'Morantron/tmux-fingers'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'jbnicolai/tmux-fpp'
# set -g @plugin 'tmux-plugins/tmux-sidebar'

# https://github.com/tmux-plugins/tmux-copycat
# I have to use Alt-s for SHA-1 searches because I use Alt-h (the default) to
# resize the current pane.
set -g @copycat_hash_search "M-s"
# Make Ctrl-p search for the last occurrence of a prompt. See my .bashrc for a
# description of the prompt format.
set -g @copycat_search_C-p "[0-9]+:[0-9]+ .*@.* \\\$ "
# run-shell ~/.tmux/plugins/tmux-copycat/copycat.tmux

# tmux-resurrect
set -g @resurrect-save-bash-history 'on'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '60'
# set -g @resurrect-save 'S'
# set -g @resurrect-restore 'R'

# https://github.com/tmux-plugins/tmux-open
# run-shell ~/.tmux/plugins/tmux-open/open.tmux

# tmux-fingers
# set -g @fingers-copy-command 'xclip -selection clipboard'

# tmux-prefix-highlight
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold' # default is 'fg=default,bg=yellow'

# tmux-sidebar
set -g @sidebar-tree-command 'tree -C'
# set -g @sidebar-tree-pager 'view -'
set -g @sidebar-tree-width '15'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
